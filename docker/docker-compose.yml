version: '3.1'
services:

  demo:
    hostname: demo
    image: odoopbx/demo:${ODOO_VERSION:-15.0}
    extra_hosts:
      - odoo:127.0.0.1
      - asterisk:127.0.0.1
      - agent:127.0.0.1
    ports:
      # Odoo HTTP interface http://localhost:8080/web
      - 0.0.0.0:8080:8072
      # Nginx HTTPS proxy for Odoo https://localhost/web
      - 0.0.0.0:443:443
      # Salt listener for asterisk CLI
      - 0.0.0.0:30000:30000
      # Asterisk SIP UDP transport (pjsip.conf)
      - 0.0.0.0:65060:65060/udp
      # Asterisk RTP media ports (rtp.conf)
      - 0.0.0.0:10100-10200:10100-10200/udp
      # Asterisk WSS port for WebRTC (http.conf)
      - 0.0.0.0:8089:8089

  db:
    hostname: db
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  odoo:
    hostname: odoo
    depends_on:
      - db
    image: odoopbx/odoo:${ODOO_VERSION:-15.0}
    command: odoo -d ${ODOO_DB:-odoopbx_15}
    environment:
    - HOST=db
    - USER=odoo
    - PASSWORD=odoo
    - DATABASE=${ODOO_DB:-odoopbx_15}
    - ODOO_VERSION
    volumes:
      - odoo_data:/var/lib/odoo
    ports:
      # Odoo HTTP longpolling port http://localhost:8072/web
      - 0.0.0.0:8072:8072

  pbx:
    hostname: pbx
    image: odoopbx/pbx
    network_mode: host
    # Required to manage host's ipsets (if reactor is enabled).
    privileged: true
    volumes:
      - asterisk_etc:/etc/asterisk
    environment:
      - ODOO_DB
      - ASTERISK_AUTOSTART=false

  freepbx:
    hostname: freepbx
    # https://hub.docker.com/r/tiredofit/freepbx. See also:
    # https://github.com/tiredofit/docker-freepbx/blob/15/examples/docker-compose.yml
    image: tiredofit/freepbx
    cap_add:
      - NET_ADMIN
    privileged: True
    volumes:
      - freepbx_data:/data
      - freepbx_db:/var/lib/mysql
    environment:
      - DB_EMBEDDED=TRUE


volumes:
  odoo_data:
  db_data:
  asterisk_etc:
  freepbx_db:
  freepbx_data:
